; Sig
(sort node)
(sort epoch)
(relation le epoch epoch)
(relation locked epoch node)
(relation transfer epoch node)
(relation held node)
(constant zero epoch)
(function ep node epoch)
; End sig

; Axiom axiom1
(axiom (forall X epoch (le X X)))
; Axiom axiom2
(axiom (forall Y epoch (forall Z epoch (forall X epoch (or (not (and (le X Y) (le Y Z))) (le X Z))))))
; Axiom axiom3
(axiom (forall Y epoch (forall X epoch (or (not (and (le X Y) (le Y X))) (= X Y)))))
; Axiom axiom4
(axiom (forall Y epoch (forall X epoch (or (le X Y) (le Y X)))))
; Axiom axiom5
(axiom (forall X epoch (le zero X)))

(model +
  ((node!val!0 node) (epoch!val!0 epoch) (epoch!val!1 epoch))
  (= zero epoch!val!0)
  (le epoch!val!0 epoch!val!1)
  (le epoch!val!0 epoch!val!0)
  (le epoch!val!1 epoch!val!1)
  (= (ep node!val!0) epoch!val!0)
)
(model -
  ((node!val!0 node) (node!val!1 node) (epoch!val!0 epoch) (epoch!val!1 epoch) (epoch!val!2 epoch))
  (= zero epoch!val!0)
  (le epoch!val!1 epoch!val!1)
  (le epoch!val!2 epoch!val!2)
  (le epoch!val!0 epoch!val!1)
  (le epoch!val!0 epoch!val!0)
  (le epoch!val!1 epoch!val!2)
  (le epoch!val!0 epoch!val!2)
  (locked epoch!val!1 node!val!0)
  (locked epoch!val!1 node!val!1)
  (locked epoch!val!0 node!val!1)
  (locked epoch!val!0 node!val!0)
  (locked epoch!val!2 node!val!1)
  (locked epoch!val!2 node!val!0)
  (= (ep node!val!0) epoch!val!0)
  (= (ep node!val!1) epoch!val!0)
)
(model -
  ((node!val!0 node) (node!val!1 node) (epoch!val!0 epoch) (epoch!val!1 epoch) (epoch!val!2 epoch))
  (= zero epoch!val!0)
  (le epoch!val!1 epoch!val!1)
  (le epoch!val!2 epoch!val!2)
  (le epoch!val!0 epoch!val!1)
  (le epoch!val!2 epoch!val!1)
  (le epoch!val!0 epoch!val!0)
  (le epoch!val!0 epoch!val!2)
  (locked epoch!val!1 node!val!0)
  (locked epoch!val!1 node!val!1)
  (= (ep node!val!0) epoch!val!0)
  (= (ep node!val!1) epoch!val!0)
)
(model +
  ((node!val!0 node) (node!val!1 node) (epoch!val!0 epoch) (epoch!val!1 epoch))
  (= zero epoch!val!0)
  (le epoch!val!0 epoch!val!1)
  (le epoch!val!1 epoch!val!1)
  (le epoch!val!0 epoch!val!0)
  (= (ep node!val!0) epoch!val!0)
  (= (ep node!val!1) epoch!val!0)
)
(model +
  ((node!val!0 node) (epoch!val!0 epoch) (epoch!val!1 epoch))
  (= zero epoch!val!0)
  (le epoch!val!0 epoch!val!1)
  (le epoch!val!0 epoch!val!0)
  (le epoch!val!1 epoch!val!1)
  (locked epoch!val!1 node!val!0)
  (locked epoch!val!0 node!val!0)
  (= (ep node!val!0) epoch!val!0)
)
(model -
  ((node!val!0 node) (node!val!1 node) (epoch!val!0 epoch) (epoch!val!1 epoch))
  (= zero epoch!val!0)
  (le epoch!val!0 epoch!val!1)
  (le epoch!val!1 epoch!val!1)
  (le epoch!val!0 epoch!val!0)
  (locked epoch!val!1 node!val!0)
  (locked epoch!val!0 node!val!0)
  (locked epoch!val!1 node!val!1)
  (locked epoch!val!0 node!val!1)
  (= (ep node!val!0) epoch!val!0)
  (= (ep node!val!1) epoch!val!0)
)
(model +
  ((node!val!0 node) (node!val!1 node) (epoch!val!0 epoch) (epoch!val!1 epoch))
  (= zero epoch!val!0)
  (le epoch!val!0 epoch!val!1)
  (le epoch!val!1 epoch!val!1)
  (le epoch!val!0 epoch!val!0)
  (locked epoch!val!1 node!val!0)
  (= (ep node!val!0) epoch!val!0)
  (= (ep node!val!1) epoch!val!0)
)
